sensors:
    formated_multiplus_state:
      # unit_of_measurement: "State"
      friendly_name: "Multiplus State"
      value_template: >-
        {% if is_state('sensor.multiplus_state', '0' ) %} Off
        {% elif is_state('sensor.multiplus_state', '1' ) %} Low Power
        {% elif is_state('sensor.multiplus_state', '2' ) %} Fault
        {% elif is_state('sensor.multiplus_state', '3' ) %} Bulk
        {% elif is_state('sensor.multiplus_state', '4' ) %} Absorption
        {% elif is_state('sensor.multiplus_state', '5' ) %} Float
        {% elif is_state('sensor.multiplus_state', '6' ) %} Storage
        {% elif is_state('sensor.multiplus_state', '7' ) %} Equalize
        {% elif is_state('sensor.multiplus_state', '8' ) %} Passthru
        {% elif is_state('sensor.multiplus_state', '9' ) %} Inverting
        {% elif is_state('sensor.multiplus_state', '10' ) %} Power Assist
        {% elif is_state('sensor.multiplus_state', '11' ) %} Power Supply
        {% elif is_state('sensor.multiplus_state', '12' ) %} Bulk Protection
        {% endif %}
    # 0=Off;1=Low Power;2=Fault;3=Bulk;4=Absorption;5=Float;6=Storage;7=Equalize;8=Passthru;9=Inverting;10=Power assist;11=Power supply;252=Bulk protection
    
    formatted_solar_power_combined:
      friendly_name: "Solar Combined"
      value_template: "{{ ( (states('sensor.solar_output_power') | float) + (states('sensor.secondary_solar_output_power') | float ) ) }}"
    
    formatted_multiplus_switch:
      friendly_name: "Multiplus Switch"
      value_template: >-
        {% if is_state('sensor.multiplus_switch_position', '1' ) %} Charger Only
        {% elif is_state('sensor.multiplus_switch_position', '2' ) %} Inverter Only
        {% elif is_state('sensor.multiplus_switch_position', '3' ) %} On
        {% elif is_state('sensor.multiplus_switch_position', '4' ) %} Off
        {% endif %}
    #1=Charger Only;2=Inverter Only;3=On;4=Off
    
    
    formated_multiplus_active_input:
      friendly_name: "Multiplus Active Input"
      value_template: >-
        {% if is_state('sensor.multiplus_active_input', '0' ) %} AC Input
        {% elif is_state('sensor.multiplus_active_input', '240' ) %} Battery Power
        {% endif %}
    # 0=AC Input 1;1=AC Input 2;240=Disconnected
    
    formated_multiplus_low_battery_alarm:
      friendly_name: "Multiplus Low Battery Alarm"
      value_template: >-
        {% if is_state('sensor.multiplus_low_battery_alarm', '0' ) %} OK
        {% elif is_state('sensor.multiplus_low_battery_alarm', '1' ) %} Warning
        {% elif is_state('sensor.multiplus_low_battery_alarm', '2' ) %} Alarm
        {% endif %}
    # 0=Ok;1=Warning;2=Alarm
    
    formated_multiplus_overload_alarm:
      friendly_name: "Multiplus Overload Alarm"
      value_template: >-
        {% if is_state('sensor.multiplus_overload_alarm', '0' ) %} OK
        {% elif is_state('sensor.multiplus_overload_alarm', '1' ) %} Warning
        {% elif is_state('sensor.multiplus_overload_alarm', '2' ) %} Alarm
        {% endif %}
    # 0=Ok;1=Warning;2=Alarm    
    
    
    # Battery
    formated_battery_power_available:
      unit_of_measurement: "%"
      value_template: "{{ ( states('sensor.battery_state_of_charge') | float * 2 | float / 10 | float - 100 | round(0) ) }}"
      friendly_name: "Battery Power Available"
      
    formated_battery_power:
      unit_of_measurement: "W"
      value_template: "{{ states('sensor.battery_current') | float(0) * states('sensor.battery_voltage') | float(0) }}"
      friendly_name: "Battery Power"

      # SOlar
    formated_solar_charger_state:
      friendly_name: "Solar Charger State"
      value_template: >-
        {% if is_state('sensor.solar_charger_state', '0' ) %} Off
        {% elif is_state('sensor.solar_charger_state', '2' ) %} Fault
        {% elif is_state('sensor.solar_charger_state', '3' ) %} Bulk
        {% elif is_state('sensor.solar_charger_state', '4' ) %} Absorption
        {% elif is_state('sensor.solar_charger_state', '5' ) %} Float
        {% elif is_state('sensor.solar_charger_state', '6' ) %} Storage
        {% elif is_state('sensor.solar_charger_state', '7' ) %} Equalize
        {% elif is_state('sensor.solar_charger_state', '11' ) %} Other
        {% elif is_state('sensor.solar_charger_state', '252' ) %} External Control
        {% endif %}
      # 0=Off;2=Fault;3=Bulk;4=Absorption;5=Float;6=Storage;7=Equalize;11=Other (Hub-1);252=External control
      
    formatted_battery_temperature:
      unit_of_measurement: "F"
      friendly_name: "Battery Temperature"
      value_template: >-
        {% if is_number(states('sensor.multiplus_battery_temperature')) %}
          {{ ( states('sensor.multiplus_battery_temperature') | float / 10 | float * 9/5 | float + 32 )  }}
        {% else %}
          {{ 'Off' }}
        {% endif %}

    battery_input_power:
      device_class: power
      friendly_name: "Battery Input Power"
      unit_of_measurement: "W"
      value_template: >-
       {% if states('sensor.formated_battery_power')|float >= 0 %}
         {{ states('sensor.formated_battery_power') }}
       {% else %}
         0
       {% endif %}
      availability_template: >-
       {{ states('sensor.formated_battery_power')|is_number}}

    battery_output_power:
      device_class: power
      friendly_name: "Battery Output Power"
      unit_of_measurement: "W"
      value_template: >-
        {% if (states('sensor.formated_battery_power')|float < 0) %}
          {{ -1 * states('sensor.formated_battery_power')|float }}
        {% else %}
          0
        {% endif %}
      availability_template: >-
        {{ states('sensor.formated_battery_power')|is_number}}
        
    gps_latitude:
      unit_of_measurement: "deg"
      value_template: "{{ state_attr('device_tracker.sm_t307u', 'latitude') | float }}"
      
    gps_longitude:
      unit_of_measurement: "deg"
      value_template: "{{ state_attr('device_tracker.sm_t307u', 'longitude') | float }}"      
